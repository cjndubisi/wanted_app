fastlane_version "2.141.0"

before_all do
  # ensure_git_status_clean(show_uncommitted_changes: true)
  if is_ci?
    create_ci_keychain
  end
end

after_all do |lane, options|
  if is_ci?
    delete_ci_keychain
  end
end

error do |lane, exception|
  if is_ci?
    delete_ci_keychain
  end
end

private_lane :options_for_branch do | options |
  {
    app_identifier: 'wanted.app.ios',
    export_type: git_branch == 'master' ? 'app-store' : 'ad-hoc',
    match_profile_name: git_branch == 'master' ? 'match AppStore wanted.app.ios' : 'match AdHoc wanted.app.ios'
  }
end

platform :ios do
  # iOS Lanes

  desc "Fetch certificates and provisioning profiles"
  lane :certificates do
    match(app_identifier: "wanted.app.ios", type: "development", readonly: false)
    match(app_identifier: "wanted.app.ios", type: "adhoc", readonly: false)
    match(app_identifier: "wanted.app.ios", type: "appstore", readonly: false)
  end

  lane :bundle_ios do 
    sh('yarn react-native bundle ' \
        '--entry-file packages/app/index.js ' \
        '--platform ios ' \
        '--dev false ' \
        '--bundle-output ios/main.jsbundle ' \
        '--assets-dest ios')
  end

  desc 'Build the iOS application.'
  private_lane :build do
    clear_derived_data
    cocoapods(
      podfile: "ios/Podfile",
      repo_update: true,
      use_bundle_exec: true,
    )
    bundle_ios
    certificates
    increment_build_number(xcodeproj: './ios/Wanted.xcodeproj')

    options = options_for_branch

    gym(
      scheme: 'Wanted',
      workspace: './ios/Wanted.xcworkspace',
      configuration: 'Release',
      export_options: {
        method: options[:export_type],
        provisioningProfiles: { 
          "wanted.app.ios" => options[:match_profile_name]
        }
      }
    )
  end

  desc 'Ship to Testflight.'
  lane :beta do
    build
    appcenter_upload(
      api_token: ENV["APPCENTER_API_TOKEN"],
      owner_name: ENV["APPCENTER_OWNER_NAME"],
      app_name: ENV["APPCENTER_APP_NAME"],
      dsym: ENV["FASTLANE_OUTPUT_DIRECTORY"],
      ipa: ENV["FASTLANE_OUTPUT_DIRECTORY"]
    )
    commit_version_bump(message: 'Bump build', xcodeproj: 'ios/Wanted.xcodeproj')
    push_to_git_remote(tags: false)
  end

  private_lane :create_ci_keychain do
    keychain_name = "ci_keychain"
    ENV["KEYCHAIN_NAME"] = keychain_name
    ENV["KEYCHAIN_PASSWORD"] = keychain_name
    ENV["MATCH_KEYCHAIN_NAME"] = keychain_name
    ENV["MATCH_KEYCHAIN_PASSWORD"] = keychain_name

    create_keychain(
      name: keychain_name,
      password: keychain_name,
      default_keychain: true,
      unlock: true,
      timeout: 3600,
      add_to_search_list: true
    )
  end

  private_lane :delete_ci_keychain do
    delete_keychain(name: "ci_keychain")
  end
end

platform :android do
  # Android Lanes

  desc 'Build the Android application.'
  private_lane :build do
    gradle(task: 'clean', project_dir: 'android/')
    gradle(task: 'assemble', build_type: 'Release', project_dir: 'android/')
  end

  desc 'Ship to Playstore Beta.'
  lane :beta do
    build
    supply(track: 'beta', track_promote_to: 'beta')
    git_commit(path: ['./android/gradle.properties'], message: 'Bump versionCode')
    push_to_git_remote
  end
end